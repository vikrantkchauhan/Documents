=> Design Pattern Book :-
	-> A book i.e. "Design Patterns : Elements of Reusable Object-Oriented Software" was written in 1994 and its best selling book for design patterns
	-> This book was written by 4 authors i.e. Erich Gamma, Ralph Johnson, John Vlissides and Richard Heml and they all 4 are known as Gang Of Four (GOF)
	-> They categorized all the design patterns into 3 parts :-
		1. Creational Design Patterns
		2. Structural Design Patterns
		3. Behavioral Design Patterns
		
-------------------

=> Creational Design Patterns :-
	-> These patterns focus on the process of object creation.
	-> They help manage the instantiation of objects, hiding the details of how objects are created and composed.
	-> There are 5 Creational Design Patterns :-
		1. Singleton Design Pattern:
			= Ensures a class has only one instance.
		2. Factory Method Design Pattern:
			= Defines an interface for creating objects.
		3. Abstract Factory Design Pattern:
			= Provides an interface for creating related object families.
		4. Prototype Design Pattern:
			= Creates new objects by copying an existing one.
		5. Builder Design Pattern:
			= Separates the construction of a complex object from its representation
		
		
=> Structural Design Patterns :-
	-> These patterns deal with the composition of classes and objects to form larger structures.
	-> They facilitate the creation of relationships between objects to build more complex systems.
	-> There are 7 types of Structural Design Patterns :-
		1. Adapter Design Pattern:
			= Allows incompatible interfaces to work together.
		2. Bridge Design Pattern:
			= Separates an object's abstraction from its implementation.
		3. Composite Design Pattern:
			= Composes objects into tree structures to treat individual objects and compositions uniformly.
		4. Decorator Design Pattern:
			= Dynamically adds behavior to objects without altering their class.
		5. Facade Design Pattern:
			= Provides a simplified interface to a complex subsystem.
		6. Flyweight Design Pattern:
			= Shares common, stateless objects to conserve memory.
		7. Proxy Design Pattern:
			= Provides a surrogate or placeholder for another object to control access.
		
		
=> Behavioral Design Patterns :-
	-> These patterns define how objects interact and communicate with each other.
	-> They address the responsibilities and behaviors of objects within a system.
	-> There are 11 types of Behavioral Design Patterns :-
		1. Chain of Responsibility Design Pattern:
			= Passes requests along a chain of handlers.
		2. Command Design Pattern:
			= Encapsulates requests as objects to parameterize clients.
		3. Interpreter Design Pattern:
			= Defines a grammar for interpreting language expressions.
		4. Iterator Design Pattern:
			= Provides a way to access elements sequentially.
		5. Mediator Design Pattern:
			= Defines central communication between objects.
		6. Memento Design Pattern:
			= Captures and externalizes an object's internal state.
		7. Observer Design Pattern:
			= Notifies observers of an object's state changes.
		8. State Design Pattern:
			= Alters an object's behavior when its state changes.
		9. Strategy Design Pattern:
			= Defines a family of algorithms and makes them interchangeable.
		10. Template Method Design Pattern:
			= Defines the skeleton of an algorithm with certain steps.
		11. Visitor Design Pattern:
			= Separates an object structure from operations on it.

=====================================================================================================

=> Miscellaneous Design Patterns :-
	-> These are not defined in the above mentioned book
	-> Some examples are :-
		1. Dependency Injection Design Pattern
		2. DAO Design Pattern
		3. MVC Design Pattern
		   etc
		   
=====================================================================================================