=> Jackson :-
	-> Jackson is a popular JSON (JavaScript Object Notation) processing library in java
	-> It is used to convert/serialize Java Objects/Map to JSON and vice-versa
	-> Features :-
		1. Easy to use
		2. High Performance
		3. No need to create mapping
		4. Integration with java frameworks
		5. Open Source (free to use)
		6. No Dependency
	-> Jackson provides 3 ways to process the JSON :-
		1. Data Binding :-
			= It is a way to convert JSON to POJO and vice-versa using property accessor or using annotations
			= It is of 2 types :-
				A. Simple Data Binding :-
					-) It converts JSON to Java Maps, Lists, Strings, Numbers, Booleans and Null Objects and vice-versa
				B. Full Data Binding
					-) It converts JSON from any Java type and vice-versa
			= Classes or Interfaces used for this are :-
				A. ObjectMapper
				B. ObjectReader
				C. ObjectWriter
		2. Streaming API :-
			= It is used to process JSON data in streaming manner, We can read and write JSON data incrementally, without loading the entire JSON structure into memory
			= It is useful when dealing with large JSON documents or contineous streams of JSON data as it provides efficient and memory-friendly procressing
			= It is the most powerful approach among others
			= Classes or Interfaces used for this are :-
				A. JsonParser
				B. JsonGenerator
		3. Tree Model :-
			= It is used to create in-memory tree representation of the JSON document similar to DOM tree
			= It is not much fast as compared to streaming API, but it is most flexible approach to read and write JSON data
			= Classes or Interfaces used for this are :-
				A. JsonNode
				B. ObjectNode
				C. ArrayNode
				   etc
				   
==============================================================================================